{"version":3,"sources":["Table.jsx","List.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Table","data","tableName","row","name","_this","this","react_default","a","createElement","props","rows","map","index","className","type","placeholder","getValue","onChange","event","addFunction","target","value","_this2","tableNames","createRows","React","Component","List","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleSubmit","setState","preventDefault","title","onSubmit","currList","item","key","App","buttonClicked","assignments","students","grades","handleButtonClicked","addAssignment","addStudent","addGrade","buttonName","assignmentName","concat","studentName","assignment","student","score","tabChoice","src_List","src_Table","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2MA8CeA,mLA3CJC,EAAMC,EAAWC,GACxB,OAAID,KAAaD,GAAQE,KAAOF,EAAKC,GAC5BD,EAAKC,GAAWC,GAEhB,+CAIAC,GAAM,IAAAC,EAAAC,KACf,OACEC,EAAAC,EAAAC,cAAA,WACGH,KAAKI,MAAMC,KAAKC,IAAI,SAACT,EAAKU,GAAN,OACnBN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,uCACZX,EACDI,EAAAC,EAAAC,cAAA,SACEK,UAAU,wBACVC,KAAK,OACLC,YAAaX,EAAKY,SAASZ,EAAKK,MAAMT,KAAMG,EAAMD,GAClDe,SAAU,SAAAC,GAAK,OACbd,EAAKK,MAAMU,YAAYhB,EAAMD,EAAKgB,EAAME,OAAOC,+CAQpD,IAAAC,EAAAjB,KACP,OACEC,EAAAC,EAAAC,cAAA,WACGH,KAAKI,MAAMc,WAAWZ,IAAI,SAACR,EAAMS,GAAP,OACzBN,EAAAC,EAAAC,cAAA,OAAKK,UAAU,QACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wBAAwBV,GACvCG,EAAAC,EAAAC,cAAA,WAAMc,EAAKE,WAAWrB,gBAnChBsB,IAAMC,WCuDXC,cAtDb,SAAAA,EAAYlB,GAAO,IAAAL,EAAA,OAAAwB,OAAAC,EAAA,EAAAD,CAAAvB,KAAAsB,IACjBvB,EAAAwB,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA3B,KAAMI,KACDwB,MAAQ,CACXZ,MAAO,IAGTjB,EAAK8B,aAAe9B,EAAK8B,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAxB,IACpBA,EAAKiC,aAAejC,EAAKiC,aAAaF,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAxB,IAPHA,4EAUNc,GACXb,KAAKiC,SAAS,CAAEjB,MAAOH,EAAME,OAAOC,6CAGzBH,GACXb,KAAKiC,SAAS,CACZjB,MAAO,KAGThB,KAAKI,MAAMU,YAAYd,KAAK4B,MAAMZ,OAClCH,EAAMqB,kDAIN,OACEjC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBAEbP,EAAAC,EAAAC,cAAA,KAAGK,UAAU,MAAMR,KAAKI,MAAM+B,OAC9BlC,EAAAC,EAAAC,cAAA,QAAMiC,SAAUpC,KAAKgC,cACnB/B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEK,UAAU,wBACVC,KAAK,OACLC,YAAaV,KAAKI,MAAMM,YACxBM,MAAOhB,KAAK4B,MAAMZ,MAClBJ,SAAUZ,KAAK6B,gBAGnB5B,EAAAC,EAAAC,cAAA,SAAOK,UAAU,aAAaC,KAAK,SAASO,MAAM,YAEpDf,EAAAC,EAAAC,cAAA,MAAIK,UAAU,OACZP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cAAcR,KAAKI,MAAM+B,OACvCnC,KAAKI,MAAMiC,SAAS/B,IAAI,SAACgC,EAAM/B,GAAP,OACvBN,EAAAC,EAAAC,cAAA,MAAIK,UAAU,UAAU+B,IAAKhC,GAC1B,IACA+B,EAAM,gBA9CFlB,IAAMC,WC8HVmB,cA3Hb,SAAAA,EAAYpC,GAAO,IAAAL,EAAA,OAAAwB,OAAAC,EAAA,EAAAD,CAAAvB,KAAAwC,IACjBzC,EAAAwB,OAAAE,EAAA,EAAAF,CAAAvB,KAAAuB,OAAAG,EAAA,EAAAH,CAAAiB,GAAAb,KAAA3B,KAAMI,KAEDwB,MAAQ,CACXa,cAAe,GACfC,YAAa,GACbC,SAAU,GACVC,OAAQ,IAGV7C,EAAK8C,oBAAsB9C,EAAK8C,oBAAoBf,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAxB,IAC3BA,EAAK+C,cAAgB/C,EAAK+C,cAAchB,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAxB,IAErBA,EAAKgD,WAAahD,EAAKgD,WAAWjB,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAxB,IAClBA,EAAKiD,SAAWjD,EAAKiD,SAASlB,KAAdP,OAAAQ,EAAA,EAAAR,CAAAxB,IAdCA,mFAiBCkD,GAClBjD,KAAKiC,SAAS,CACZQ,cAAeQ,0CAKLC,GACZlD,KAAKiC,SAAS,CACZS,YAAa1C,KAAK4B,MAAMc,YAAYS,OAAOD,wCAKpCE,GACTpD,KAAKiC,SAAS,CACZU,SAAU3C,KAAK4B,MAAMe,SAASQ,OAAOC,sCAIhCC,EAAYC,EAASC,GAC5B,IAAIX,EAAS5C,KAAK4B,MAAMgB,OACpBM,EAAiBG,EACjBD,EAAcE,EACZD,KAAcT,IAClBA,EAAOM,GAAkB,IAE3BN,EAAOM,GAAgBE,GAAeG,EACtCvD,KAAKiC,SAAS,CAAEW,OAAQA,qCAGjB,IAAA3B,EAAAjB,KACHwD,EAAYvD,EAAAC,EAAAC,cAAA,YAuChB,MApCiC,gBAA7BH,KAAK4B,MAAMa,gBACbe,EACEvD,EAAAC,EAAAC,cAACsD,EAAD,CACE/C,YAAY,oBACZ2B,SAAUrC,KAAK4B,MAAMc,YACrB5B,YAAad,KAAK8C,cAClBX,MAAM,iBAOqB,aAA7BnC,KAAK4B,MAAMa,gBACbe,EACEvD,EAAAC,EAAAC,cAACsD,EAAD,CACE/C,YAAY,iBACZ2B,SAAUrC,KAAK4B,MAAMe,SACrB7B,YAAad,KAAK+C,WAClBZ,MAAM,oBAMqB,WAA7BnC,KAAK4B,MAAMa,gBACbe,EACEvD,EAAAC,EAAAC,cAACuD,EAAD,CACExC,WAAYlB,KAAK4B,MAAMc,YACvBrC,KAAML,KAAK4B,MAAMe,SACjB7B,YAAad,KAAKgD,SAClBrD,KAAMK,KAAK4B,MAAMgB,UAMrB3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,wBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,MAAIK,UAAU,wCAAd,eAGJP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,2CACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,0BACbP,EAAAC,EAAAC,cAAA,UACEK,UAAU,kBACVmD,QAAS,kBAAM1C,EAAK4B,oBAAoB,iBAF1C,eAMA5C,EAAAC,EAAAC,cAAA,UACEK,UAAU,kBACVmD,QAAS,kBAAM1C,EAAK4B,oBAAoB,cAF1C,YAMA5C,EAAAC,EAAAC,cAAA,UACEK,UAAU,kBACVmD,QAAS,kBAAM1C,EAAK4B,oBAAoB,YAF1C,YAQHW,UAtHSpC,IAAMC,WCQJuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7ad2de86.chunk.js","sourcesContent":["import React from \"react\";\n\nclass Table extends React.Component {\n  getValue(data, tableName, row) {\n    if (tableName in data && row in data[tableName]) {\n      return data[tableName][row];\n    } else {\n      return \"Add Score\";\n    }\n  }\n\n  createRows(name) {\n    return (\n      <div>\n        {this.props.rows.map((row, index) => (\n          <div className=\"Box-row d-flex flex-justify-between\">\n            {row}\n            <input\n              className=\"form-control input-sm\"\n              type=\"text\"\n              placeholder={this.getValue(this.props.data, name, row)}\n              onChange={event =>\n                this.props.addFunction(name, row, event.target.value)\n              }\n            />\n          </div>\n        ))}\n      </div>\n    );\n  }\n  render() {\n    return (\n      <div>\n        {this.props.tableNames.map((name, index) => (\n          <div className=\"pt-6\">\n            <div className=\"Box col-6 mx-auto\">\n              <div className=\"Box-header Box-title\">{name}</div>\n              <div>{this.createRows(name)}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      value: \"\"\n    });\n\n    this.props.addFunction(this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"col-6 mx-auto\">\n        {/*Replace the code below to call the title prop*/}\n        <p className=\"h2\">{this.props.title}</p>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              className=\"form-control input-sm\"\n              type=\"text\"\n              placeholder={this.props.placeholder}\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <input className=\"btn btn-sm\" type=\"submit\" value=\"Submit\" />\n        </form>\n        <ul className=\"Box\">\n          <div className=\"Box-header\">{this.props.title}</div>\n          {this.props.currList.map((item, index) => (\n            <li className=\"Box-row\" key={index}>\n              {\" \"}\n              {item}{\" \"}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React from \"react\";\nimport Table from \"./Table\";\nimport List from \"./List\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buttonClicked: \"\",\n      assignments: [] /*Below this line, add the students state variable*/,\n      students: [],\n      grades: {}\n    };\n\n    this.handleButtonClicked = this.handleButtonClicked.bind(this);\n    this.addAssignment = this.addAssignment.bind(this);\n    /*Uncomment the line below to bind the method*/\n    this.addStudent = this.addStudent.bind(this);\n    this.addGrade = this.addGrade.bind(this);\n  }\n\n  handleButtonClicked(buttonName) {\n    this.setState({\n      buttonClicked: buttonName\n    });\n  }\n\n  /*Check out this addAssignment methodsss*/\n  addAssignment(assignmentName) {\n    this.setState({\n      assignments: this.state.assignments.concat(assignmentName)\n    });\n  }\n\n  /*Write an addStudent method here*/\n  addStudent(studentName) {\n    this.setState({\n      students: this.state.students.concat(studentName)\n    });\n  }\n\n  addGrade(assignment, student, score) {\n    let grades = this.state.grades;\n    let assignmentName = assignment;\n    let studentName = student;\n    if (!(assignment in grades)) {\n      grades[assignmentName] = {};\n    }\n    grades[assignmentName][studentName] = score;\n    this.setState({ grades: grades });\n  }\n\n  render() {\n    let tabChoice = <div />;\n\n    /*Uncomment below to render assignments*/\n    if (this.state.buttonClicked === \"assignments\") {\n      tabChoice = (\n        <List\n          placeholder=\"Add Assignment...\"\n          currList={this.state.assignments}\n          addFunction={this.addAssignment}\n          title=\"Assignments\"\n        />\n      );\n    }\n\n    /* Change below to render students*/\n\n    if (this.state.buttonClicked === \"students\") {\n      tabChoice = (\n        <List\n          placeholder=\"Add Student...\"\n          currList={this.state.students}\n          addFunction={this.addStudent}\n          title=\"Student Roster\"\n        />\n      );\n    }\n\n    /* Uncomment lines below to render grades*/\n    if (this.state.buttonClicked === \"grades\") {\n      tabChoice = (\n        <Table\n          tableNames={this.state.assignments}\n          rows={this.state.students}\n          addFunction={this.addGrade}\n          data={this.state.grades}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"Box Box--spacious f4\">\n          <div className=\"Box-header\">\n            <h3 className=\"Box-title d-flex flex-justify-center\">GradeBook</h3>\n          </div>\n        </div>\n        <nav className=\"UnderlineNav d-flex flex-justify-center\">\n          <div className=\"UnderlineNav-body pt-6\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.handleButtonClicked(\"assignments\")}\n            >\n              Assignments\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.handleButtonClicked(\"students\")}\n            >\n              Students\n            </button>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.handleButtonClicked(\"grades\")}\n            >\n              Grades\n            </button>\n          </div>\n        </nav>\n        {tabChoice}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}